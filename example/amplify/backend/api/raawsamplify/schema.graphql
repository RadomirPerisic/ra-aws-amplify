type Post
  @model
  # @searchable
  @auth(
    rules: [
      { allow: owner }
      { allow: owner, ownerField: "editors", operations: [update] }
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  title: String!
  content: String
  image: Media @connection
  editors: [PostEditor] @connection(name: "PostEditors")
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type PostEditor
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "editors" }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  post: Post! @connection(name: "PostEditors")
  editor: User! @connection(name: "UserEditors")
}

type User
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["admin"] }]) {
  id: ID!
  username: String!
  posts: [PostEditor] @connection(name: "UserEditors")
}

type Comment
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin", "editor"] }
    ]
  )
  @key(name: "byPost", fields: ["postId"], queryField: "commentsByPost") {
  id: ID!
  content: String
  postId: ID!
}

type Media
  @model
  # @searchable
  @auth(
    rules: [{ allow: owner }, { allow: groups, groups: ["admin", "editor"] }]
  ) {
  id: ID!
  name: String
  attachment: S3Object!
}

# S3Object minimum type
type S3Object {
  key: String!
  identityId: String
  level: String
}
